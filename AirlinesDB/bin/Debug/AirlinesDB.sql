/*
Deployment script for AirlinesDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "AirlinesDB"
:setvar DefaultFilePrefix "AirlinesDB"
:setvar DefaultDataPath "C:\Users\Dhruv\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Dhruv\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 66269772-4cba-4897-9dd1-b4691a4665b5 is skipped, element [dbo].[Airline].[Id] (SqlSimpleColumn) will not be renamed to AirlineId';


GO
PRINT N'Rename refactoring operation with key 85e7cf26-c6c0-4e7d-9c65-9a0651f4e04c is skipped, element [dbo].[Table1].[Id] (SqlSimpleColumn) will not be renamed to PassengerId';


GO
PRINT N'Rename refactoring operation with key ef3c6a3b-f036-4d27-bfbc-f881d5eac1f4 is skipped, element [dbo].[Airport].[Id] (SqlSimpleColumn) will not be renamed to AirportId';


GO
PRINT N'Rename refactoring operation with key 992eafad-6929-401f-9276-73d0ba367ad0 is skipped, element [dbo].[Flight].[Id] (SqlSimpleColumn) will not be renamed to FlightId';


GO
PRINT N'Rename refactoring operation with key fc9e5e09-81b8-4725-bcd1-3ea656de3cfa is skipped, element [dbo].[Seat].[Id] (SqlSimpleColumn) will not be renamed to SeatNum';


GO
PRINT N'Rename refactoring operation with key 66275ddb-7163-4e92-9933-331818985946 is skipped, element [dbo].[Booking].[Id] (SqlSimpleColumn) will not be renamed to BookingId';


GO
PRINT N'Rename refactoring operation with key cde76b52-0007-498f-a49e-e6ed097cb06e is skipped, element [dbo].[FlightBooking].[Id] (SqlSimpleColumn) will not be renamed to BookingId';


GO
PRINT N'Dropping [dbo].[FlightBooking].[IX_BookingId_PassengerId]...';


GO
DROP INDEX [IX_BookingId_PassengerId]
    ON [dbo].[FlightBooking];


GO
PRINT N'Dropping [dbo].[FlightBooking].[IX_FlightId]...';


GO
DROP INDEX [IX_FlightId]
    ON [dbo].[FlightBooking];


GO
PRINT N'Dropping [dbo].[FlightBooking].[IX_SeatNum_FlightId]...';


GO
DROP INDEX [IX_SeatNum_FlightId]
    ON [dbo].[FlightBooking];


GO
PRINT N'Dropping [dbo].[Seat].[IX_FlightId]...';


GO
DROP INDEX [IX_FlightId]
    ON [dbo].[Seat];


GO
PRINT N'Dropping [dbo].[FK_dbo.FlightBooking_dbo.Flight_FlightId]...';


GO
ALTER TABLE [dbo].[FlightBooking] DROP CONSTRAINT [FK_dbo.FlightBooking_dbo.Flight_FlightId];


GO
PRINT N'Dropping [dbo].[FK_dbo.FlightBooking_dbo.Seat_SeatNum_FlightId]...';


GO
ALTER TABLE [dbo].[FlightBooking] DROP CONSTRAINT [FK_dbo.FlightBooking_dbo.Seat_SeatNum_FlightId];


GO
PRINT N'Dropping [dbo].[FK_dbo.FlightBooking_dbo.Booking_BookingId_PassengerId]...';


GO
ALTER TABLE [dbo].[FlightBooking] DROP CONSTRAINT [FK_dbo.FlightBooking_dbo.Booking_BookingId_PassengerId];


GO
PRINT N'Dropping [dbo].[FK_dbo.Seat_dbo.Flight_FlightId]...';


GO
ALTER TABLE [dbo].[Seat] DROP CONSTRAINT [FK_dbo.Seat_dbo.Flight_FlightId];


GO
PRINT N'Starting rebuilding table [dbo].[FlightBooking]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FlightBooking] (
    [BookingId]   INT NOT NULL,
    [PassengerId] INT NOT NULL,
    [SeatNum]     INT NOT NULL,
    [FlightId]    INT NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_FLIGHTBOOKING1] PRIMARY KEY CLUSTERED ([BookingId] ASC, [PassengerId] ASC, [FlightId] ASC, [SeatNum] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FlightBooking])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_FlightBooking] ([BookingId], [PassengerId], [FlightId], [SeatNum])
        SELECT   [BookingId],
                 [PassengerId],
                 [FlightId],
                 [SeatNum]
        FROM     [dbo].[FlightBooking]
        ORDER BY [BookingId] ASC, [PassengerId] ASC, [FlightId] ASC, [SeatNum] ASC;
    END

DROP TABLE [dbo].[FlightBooking];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FlightBooking]', N'FlightBooking';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_FLIGHTBOOKING1]', N'PK_FLIGHTBOOKING', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Airline]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Airline] (
    [AirlineId]   INT        NOT NULL,
    [AirlineName] NCHAR (50) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AIRLINE1] PRIMARY KEY CLUSTERED ([AirlineId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Airline])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Airline] ([AirlineId], [AirlineName])
        SELECT   [AirlineId],
                 [AirlineName]
        FROM     [dbo].[Airline]
        ORDER BY [AirlineId] ASC;
    END

DROP TABLE [dbo].[Airline];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Airline]', N'Airline';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AIRLINE1]', N'PK_AIRLINE', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Airport]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Airport] (
    [AirportId]   INT         NOT NULL,
    [AirportName] NCHAR (100) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AIRRPORT1] PRIMARY KEY CLUSTERED ([AirportId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Airport])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Airport] ([AirportId], [AirportName])
        SELECT   [AirportId],
                 [AirportName]
        FROM     [dbo].[Airport]
        ORDER BY [AirportId] ASC;
    END

DROP TABLE [dbo].[Airport];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Airport]', N'Airport';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AIRRPORT1]', N'PK_AIRRPORT', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Booking]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Booking] (
    [BookingId]   INT   NOT NULL,
    [PassengerId] INT   NOT NULL,
    [BaggageFee]  MONEY NOT NULL,
    [ServiceFee]  MONEY NOT NULL,
    [TotalFee]    MONEY NOT NULL,
    [isRoundTrip] BIT   NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_BOOKING1] PRIMARY KEY CLUSTERED ([BookingId] ASC, [PassengerId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Booking])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Booking] ([BookingId], [PassengerId], [BaggageFee], [ServiceFee], [TotalFee], [isRoundTrip])
        SELECT   [BookingId],
                 [PassengerId],
                 [BaggageFee],
                 [ServiceFee],
                 [TotalFee],
                 [isRoundTrip]
        FROM     [dbo].[Booking]
        ORDER BY [BookingId] ASC, [PassengerId] ASC;
    END

DROP TABLE [dbo].[Booking];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Booking]', N'Booking';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_BOOKING1]', N'PK_BOOKING', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Flight]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Flight] (
    [FlightId]           INT      NOT NULL,
    [AirlineId]          INT      NOT NULL,
    [DepartureAirport]   INT      NOT NULL,
    [DestinationAirport] INT      NOT NULL,
    [FlightDate]         DATETIME NOT NULL,
    [Price]              MONEY    NOT NULL,
    [NumSeats]           INT      NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_FLIGHT1] PRIMARY KEY CLUSTERED ([FlightId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Flight])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Flight] ([FlightId], [AirlineId], [DepartureAirport], [DestinationAirport], [FlightDate], [Price], [NumSeats])
        SELECT   [FlightId],
                 [AirlineId],
                 [DepartureAirport],
                 [DestinationAirport],
                 [FlightDate],
                 [Price],
                 [NumSeats]
        FROM     [dbo].[Flight]
        ORDER BY [FlightId] ASC;
    END

DROP TABLE [dbo].[Flight];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Flight]', N'Flight';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_FLIGHT1]', N'PK_FLIGHT', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Passenger]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Passenger] (
    [PassengerId] INT        NOT NULL,
    [FirstName]   NCHAR (25) NOT NULL,
    [LastName]    NCHAR (25) NOT NULL,
    [Gender]      NCHAR (10) NOT NULL,
    [Email]       NCHAR (50) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PERSON1] PRIMARY KEY CLUSTERED ([PassengerId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Passenger])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Passenger] ([PassengerId], [FirstName], [LastName], [Gender], [Email])
        SELECT   [PassengerId],
                 [FirstName],
                 [LastName],
                 [Gender],
                 [Email]
        FROM     [dbo].[Passenger]
        ORDER BY [PassengerId] ASC;
    END

DROP TABLE [dbo].[Passenger];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Passenger]', N'Passenger';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PERSON1]', N'PK_PERSON', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Seat]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Seat] (
    [SeatNum]  INT NOT NULL,
    [FlightId] INT NOT NULL,
    [isBooked] INT NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SEAT1] PRIMARY KEY CLUSTERED ([SeatNum] ASC, [FlightId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Seat])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Seat] ([SeatNum], [FlightId], [isBooked])
        SELECT   [SeatNum],
                 [FlightId],
                 [isBooked]
        FROM     [dbo].[Seat]
        ORDER BY [SeatNum] ASC, [FlightId] ASC;
    END

DROP TABLE [dbo].[Seat];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Seat]', N'Seat';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SEAT1]', N'PK_SEAT', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_FLIGHTBOOKING_BID]...';


GO
ALTER TABLE [dbo].[FlightBooking] WITH NOCHECK
    ADD CONSTRAINT [FK_FLIGHTBOOKING_BID] FOREIGN KEY ([BookingId], [PassengerId]) REFERENCES [dbo].[Booking] ([BookingId], [PassengerId]);


GO
PRINT N'Creating [dbo].[FK_FLIGHTBOOKING_FID]...';


GO
ALTER TABLE [dbo].[FlightBooking] WITH NOCHECK
    ADD CONSTRAINT [FK_FLIGHTBOOKING_FID] FOREIGN KEY ([FlightId]) REFERENCES [dbo].[Flight] ([FlightId]);


GO
PRINT N'Creating [dbo].[FK_FLIGHTBOOKING_SNUM]...';


GO
ALTER TABLE [dbo].[FlightBooking] WITH NOCHECK
    ADD CONSTRAINT [FK_FLIGHTBOOKING_SNUM] FOREIGN KEY ([SeatNum], [FlightId]) REFERENCES [dbo].[Seat] ([SeatNum], [FlightId]);


GO
PRINT N'Creating [dbo].[FK_SEAT]...';


GO
ALTER TABLE [dbo].[Seat] WITH NOCHECK
    ADD CONSTRAINT [FK_SEAT] FOREIGN KEY ([FlightId]) REFERENCES [dbo].[Flight] ([FlightId]) ON DELETE CASCADE;


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '66269772-4cba-4897-9dd1-b4691a4665b5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('66269772-4cba-4897-9dd1-b4691a4665b5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '85e7cf26-c6c0-4e7d-9c65-9a0651f4e04c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('85e7cf26-c6c0-4e7d-9c65-9a0651f4e04c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ef3c6a3b-f036-4d27-bfbc-f881d5eac1f4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ef3c6a3b-f036-4d27-bfbc-f881d5eac1f4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '992eafad-6929-401f-9276-73d0ba367ad0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('992eafad-6929-401f-9276-73d0ba367ad0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fc9e5e09-81b8-4725-bcd1-3ea656de3cfa')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fc9e5e09-81b8-4725-bcd1-3ea656de3cfa')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '66275ddb-7163-4e92-9933-331818985946')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('66275ddb-7163-4e92-9933-331818985946')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cde76b52-0007-498f-a49e-e6ed097cb06e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cde76b52-0007-498f-a49e-e6ed097cb06e')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[FlightBooking] WITH CHECK CHECK CONSTRAINT [FK_FLIGHTBOOKING_BID];

ALTER TABLE [dbo].[FlightBooking] WITH CHECK CHECK CONSTRAINT [FK_FLIGHTBOOKING_FID];

ALTER TABLE [dbo].[FlightBooking] WITH CHECK CHECK CONSTRAINT [FK_FLIGHTBOOKING_SNUM];

ALTER TABLE [dbo].[Seat] WITH CHECK CHECK CONSTRAINT [FK_SEAT];


GO
PRINT N'Update complete.';


GO
